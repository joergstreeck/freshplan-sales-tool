name: Smoke Tests

on:
  pull_request:
  push:
    branches:
      - ci-mail-throttle

jobs:
  playwright:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Increase from default 6 hours to prevent cancellation
    strategy:
      fail-fast: false  # Continue other browsers if one fails
      matrix:
        browser: [chromium, firefox]
        # webkit excluded due to macOS 12 compatibility issues
        # Testing CI pipeline with email throttling

    steps:
      - uses: actions/checkout@v4
      
      # Cache for faster runs
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Show Playwright config path(s)
        run: |
          echo "--- repo configs ---"
          git ls-files | grep playwright.config.ts || true
          echo "--- working directory ---"
          pwd
          echo "--- e2e directory check ---"
          ls -la e2e/ || echo "e2e directory not found!"
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      
      - name: Debug - Check directories
        run: |
          echo "=== Root directory ==="
          ls -la
          echo "=== Legacy directory ==="
          ls -la legacy/
          echo "=== Package files ==="
          find . -name "package*.json" -type f | grep -v node_modules
      
      - run: cd frontend && npm ci
      
      - name: Build application for CI
        run: cd frontend && npm run build
      
      # Build diagnosis (static files only)
      - name: Diagnose build output
        if: always()
        continue-on-error: true  # Don't fail the pipeline on diagnosis errors
        run: |
          echo '=== Build completed ==='
          echo "Build artifacts in frontend/dist/ directory"
          ls -la frontend/dist/ | head -10 || true
          
          echo '=== Main JS bundle ==='
          MAIN_JS=$(find frontend/dist/assets -name "*.js" -type f 2>/dev/null | head -1)
          if [ -n "$MAIN_JS" ]; then
            echo "Checking $MAIN_JS for phase2 detection..."
            grep -E "(has\(\"phase2\"\)|CustomerModuleV2|initLegacyScript)" "$MAIN_JS" | head -5 || true
          fi
          
          echo '=== Preview server will be started by Playwright ==='
          echo "phase2 parameter is handled at runtime via URLSearchParams"
          echo "Build uses: .has('phase2') method for detection"
      
      - run: cd frontend && npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Debug - List e2e directory
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of root e2e directory:"
          ls -la e2e/ || echo "Root e2e not found"
          echo "Contents of frontend tests directory:"
          ls -la frontend/tests/ || echo "Frontend tests not found"
          echo "Looking for test files:"
          find . -name "*.spec.ts" -type f | grep -E "(e2e|test)" | head -10
      
      - name: Run Playwright tests on ${{ matrix.browser }}
        run: cd frontend && npx playwright test --project=${{ matrix.browser }} --reporter=line
        env:
          CI: true
      # Upload diagnosis artifacts
      - name: Upload build diagnosis
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-diagnosis-${{ matrix.browser }}
          path: |
            ci_index.html
            /tmp/vite.log
          retention-days: 7
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 7
      
      - name: Send failure notification
        if: failure() && github.run_attempt == 1 && secrets.MAIL_USERNAME != ''
        continue-on-error: true
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          secure: ${{ secrets.MAIL_SECURE }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: ⚠️ Smoke Tests Failed - ${{ github.repository }} - ${{ matrix.browser }}
          to: j.streeck@z-catering.de
          from: ${{ secrets.MAIL_USERNAME }}
          body: |
            Smoke-Test-Job fehlgeschlagen!
            
            Repository: ${{ github.repository }}
            Browser: ${{ matrix.browser }}
            Workflow: ${{ github.workflow }}
            Commit: ${{ github.event.head_commit.message }}
            Author: ${{ github.event.head_commit.author.name }}
            
            Details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
