name: Security Gates
on: [pull_request]

jobs:
  security-contracts:
    name: Security Contract Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Start PostgreSQL
        run: |
          docker run -d \
            --name postgres \
            -e POSTGRES_USER=freshplan \
            -e POSTGRES_PASSWORD=freshplan \
            -e POSTGRES_DB=freshplan \
            -p 5432:5432 \
            postgres:15-alpine

          # Wait for PostgreSQL to be ready
          sleep 10
          docker exec postgres pg_isready -U freshplan

      - name: Run Security Contract Tests
        working-directory: backend
        run: |
          ./mvnw test -Dtest=*SecurityContractTest* \
            -Dquarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/freshplan \
            -Dquarkus.datasource.username=freshplan \
            -Dquarkus.datasource.password=freshplan

      - name: Fail-closed Verification
        working-directory: backend
        run: |
          ./scripts/verify-fail-closed-security.sh

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-test-results
          path: backend/target/surefire-reports/

  pr-template-check:
    name: PR Template Compliance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check PR Description
        uses: actions/github-script@v7
        with:
          script: |
            const prBody = context.payload.pull_request.body || '';

            // Check for required sections
            const requiredSections = [
              '## 🎯 Ziel',
              '## ⚠️ Risiko',
              '## 🔄 Migrations-Schritte + Rollback',
              '## ⚡ Performance-Nachweis',
              '## 🔒 Security-Checks',
              '## 📚 SoT-Referenzen'
            ];

            const missingSections = [];
            for (const section of requiredSections) {
              if (!prBody.includes(section)) {
                missingSections.push(section);
              }
            }

            if (missingSections.length > 0) {
              core.setFailed(`PR Template incomplete. Missing sections: ${missingSections.join(', ')}`);

              // Add comment to PR
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `❌ **PR Template Validation Failed**\n\nThe following required sections are missing:\n${missingSections.map(s => `- ${s}`).join('\n')}\n\nPlease update your PR description to include all required sections.`
              });
            } else {
              console.log('✅ All required PR template sections present');
            }

  performance-smoke-test:
    name: Performance Smoke Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Start PostgreSQL
        run: |
          docker run -d \
            --name postgres \
            -e POSTGRES_USER=freshplan \
            -e POSTGRES_PASSWORD=freshplan \
            -e POSTGRES_DB=freshplan \
            -p 5432:5432 \
            postgres:15-alpine

          sleep 10

      - name: Build Backend
        working-directory: backend
        run: ./mvnw package -DskipTests

      - name: Start Backend
        working-directory: backend
        run: |
          java -jar target/quarkus-app/quarkus-run.jar &
          sleep 20
          curl -f http://localhost:8080/q/health || exit 1

      - name: Run k6 Smoke Test
        run: |
          docker run --rm -i \
            --network host \
            grafana/k6 run - < backend/src/test/k6/smoke-test.js || true

      - name: Check Performance Threshold
        run: |
          echo "⚡ Performance check would run here"
          echo "Target: P95 < 200ms"