name: Structure Guard (Modules)
on:
  pull_request:
    paths:
      - 'docs/planung/features-neu/**'
jobs:
  guard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enforce module root rule
        shell: bash
        run: |
          fail=0
          for ROOT in docs/planung/features-neu/*_*; do
            [ -d "$ROOT" ] || continue
            mapfile -t items < <(ls -1 "$ROOT" | grep -v '^\.' || true)

            # Stub-Verzeichnisse (haben _index.md mit doc_type: "stub")
            stub_dirs=()
            for d in "${items[@]}"; do
              if [ -d "$ROOT/$d" ] && [ -f "$ROOT/$d/_index.md" ] && grep -q 'doc_type: *"stub"' "$ROOT/$d/_index.md"; then
                stub_dirs+=("$d")
              fi
            done

            # Zählmenge = nur Verzeichnisse (minus Stubs), keine Dateien
            count=$(
              for d in "${items[@]}"; do
                # Skip Stub-Verzeichnisse
                skip=0
                for s in "${stub_dirs[@]}"; do [ "$d" = "$s" ] && skip=1 && break; done
                # Nur Verzeichnisse zählen, keine Dateien
                [ $skip -eq 0 ] && [ -d "$ROOT/$d" ] && echo "$d"
              done | wc -l
            )

            legacy=0
            [ -d "$ROOT/legacy-planning" ] && legacy=1

            # Regel: <= 5 Kern-Verzeichnisse (+1 falls legacy-planning vorhanden)
            # Erlaubt: backend, frontend, shared, analyse, artefakte + legacy-planning
            # Ausnahme: Module 02/03 (reorganized) = strict, andere Module = legacy limit 10
            module_name=$(basename "$ROOT")
            case "$module_name" in
              "02_neukundengewinnung"|"03_kundenmanagement")
                limit=$((5 + legacy))
                ;;
              *)
                limit=10  # Legacy tolerance für nicht-reorganisierte Module
                ;;
            esac

            if [ $count -gt $limit ]; then
              echo "::error file=$ROOT::Root enthält $count Verzeichnisse (Stub-Ordner ausgenommen). Erlaubt: $limit für $module_name"
              fail=1
            fi
          done
          exit $fail