name: Structure Guard (Modules)
on:
  pull_request:
    paths:
      - 'docs/planung/features-neu/**'
jobs:
  guard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enforce module root rule
        shell: bash
        run: |
          set +e  # wir steuern den Exit-Code selbst über fail
          fail=0
          echo "DEBUG: Starting Structure Guard check"

          for ROOT in docs/planung/features-neu/*_*; do
            echo "DEBUG: Checking ROOT: $ROOT"
            [ -d "$ROOT" ] || continue
            module_name="$(basename "$ROOT")"

            # 1) Non-Stub-Verzeichnisse zählen (nur echte Ordner, keine Dateien/Hidden)
            count=0
            for d in "$ROOT"/*/; do
              [ -d "$d" ] || continue
              base="$(basename "$d")"
              case "$base" in
                .* ) continue ;;  # versteckte Ordner ignorieren
              esac
              # Stub-Verzeichnisse überspringen
              if [ -f "$d/_index.md" ] && grep -Eq '^doc_type:\s*"stub"' "$d/_index.md"; then
                continue
              fi
              count=$((count+1))
            done

            # 2) legacy-planning Zusatzslot
            legacy=0
            [ -d "$ROOT/legacy-planning" ] && legacy=1

            # 3) Modul-spezifische Limits
            case "$module_name" in
              02_neukundengewinnung|03_kundenmanagement)
                limit=$((5 + legacy)) ;;  # backend, frontend, shared, analyse, artefakte (+ legacy)
              00_infrastruktur|01_mein-cockpit)
                limit=15 ;;               # weiche Toleranz (noch nicht restrukturiert)
              *)
                limit=10 ;;               # generische Legacy-Toleranz
            esac

            echo "DEBUG: $module_name -> count=$count, legacy=$legacy, limit=$limit"

            if [ "$count" -gt "$limit" ]; then
              echo "::error file=$ROOT::Root enthält $count Verzeichnisse (Stub-Ordner ausgenommen). Erlaubt: $limit für $module_name"
              fail=1
            fi
          done

          echo "DEBUG: Structure Guard completed with fail=$fail"
          exit "$fail"