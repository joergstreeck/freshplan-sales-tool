# âœ… FIXED: Issue #130 - TestDataBuilder CDI conflicts resolved (Sprint 2.1.6)
# All legacy builders removed from src/main, tests migrated to TestDataFactory pattern

name: Worktree CI

on:
  push:
    branches: [ 'feature/*' ]
  pull_request:
    branches: [ 'feature/*' ]
  workflow_dispatch: # Manual trigger also available

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: freshplan
          POSTGRES_USER: freshplan
          POSTGRES_PASSWORD: freshplan
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.9.6'
          
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Run backend tests
        working-directory: backend
        run: mvn -Pgreen clean verify

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Lint
        working-directory: frontend
        run: npm run lint
        
      - name: Tests
        working-directory: frontend
        run: npm test -- --run
        
      - name: Build
        working-directory: frontend
        run: npm run build

  testing:
    name: Test Suite Expansion
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: freshplan
          POSTGRES_USER: freshplan
          POSTGRES_PASSWORD: freshplan
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.9.6'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run expanded test suite
        run: |
          echo "ðŸ§ª Running expanded test coverage..."
          cd backend
          mvn -Pgreen clean verify

      - name: Coverage Report
        if: always()
        run: |
          cd backend
          mvn jacoco:report
          echo "ðŸ“Š Coverage report generated"