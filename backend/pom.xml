<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.freshplan</groupId>
  <artifactId>backend</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <properties>
    <compiler-plugin.version>3.12.1</compiler-plugin.version>
    <maven.compiler.release>17</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>3.17.4</quarkus.platform.version>
    <skipITs>true</skipITs>
    <surefire-plugin.version>3.2.5</surefire-plugin.version>
    <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-oidc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm-panache</artifactId>
    </dependency>
    <!-- Phase-1 Quick Win: Settings caching (Sprint 1.4) -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-cache</artifactId>
    </dependency>
    <!-- Sprint 2.1: Scheduler für Follow-up Automation -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-scheduler</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-h2</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-flyway</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <!-- Sprint 2.1.1 P0: Micrometer for Prometheus Metrics -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-micrometer</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-micrometer-registry-prometheus</artifactId>
    </dependency>
    <!-- CSV Generation -->
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>5.9</version>
    </dependency>
    <!-- Excel Generation -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>5.2.5</version>
    </dependency>
    <!-- OpenPDF for PDF generation -->
    <dependency>
      <groupId>com.github.librepdf</groupId>
      <artifactId>openpdf</artifactId>
      <version>1.3.30</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-security</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-mockito</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.24.2</version>
      <scope>test</scope>
    </dependency>
    <!-- Testcontainers for PostgreSQL Integration Tests -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
            <quarkus.profile>test</quarkus.profile>
          </systemPropertyVariables>
          <!-- CI Fix: Set German locale for consistent test behavior -->
          <argLine>${jacocoArgLine} -Duser.language=de -Duser.country=DE</argLine>
          <!-- Exclude performance tests by default -->
          <excludedGroups>performance</excludedGroups>
          <!-- Parallel execution for speed (can be overridden via CLI with -Dparallel=none) -->
          <parallel>classes</parallel>
          <threadCount>4</threadCount>
          <forkCount>1</forkCount>
          <reuseForks>true</reuseForks>
        </configuration>
      </plugin>
      <!-- JaCoCo Plugin für Code Coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>jacocoArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/jacoco-reports</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.80</minimum>
                    </limit>
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.70</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
              <skip>true</skip> <!-- Vorerst deaktiviert, bis wir 80% erreichen -->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Spotless Plugin für Code-Formatierung -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.43.0</version>
        <configuration>
          <java>
            <googleJavaFormat>
              <version>1.19.2</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
            <removeUnusedImports />
            <trimTrailingWhitespace />
            <endWithNewline />
            <formatAnnotations />
          </java>
        </configuration>
      </plugin>
      <!-- Flyway Maven Plugin für manuelle Migrationen in CI -->
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>9.22.3</version>
        <configuration>
          <url>jdbc:postgresql://localhost:5432/freshplan</url>
          <user>freshplan</user>
          <password>freshplan</password>
          <locations>
            <location>classpath:db/migration</location>
          </locations>
          <cleanDisabled>false</cleanDisabled>
          <outOfOrder>true</outOfOrder>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.1</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <skipITs>false</skipITs>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
    <profile>
      <id>green</id>
      <activation>
        <property>
          <name>env.CI_GREEN</name>
        </property>
      </activation>
      <properties>
        <!-- Quarkus startet schneller, wenn Dev-Services für Keycloak aus sind -->
        <quarkus.oidc.enabled>false</quarkus.oidc.enabled>
      </properties>
      <build>
        <plugins>
          <!-- Führe nur Smoke-Tests aus -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <includes>
                <!-- Green Path Tests -->
                <include>**/*AppStartsIT.java</include>
                <include>**/*UserRepoSaveLoadIT.java</include>
                <include>**/*UserServiceUpdateIT.java</include>
                <!-- T-1: Repository Layer Tests -->
                <include>**/*RepositoryTest.java</include>
                <!-- T-2: Service Layer Tests -->
                <include>**/*Service*Test.java</include>
                <include>**/*Service*IT.java</include>
                <!-- T-3: REST Controller Tests -->
                <include>**/*Resource*Test.java</include>
                <include>**/*Resource*IT.java</include>
                <include>**/*Controller*Test.java</include>
                <include>**/*Controller*IT.java</include>
              </includes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- Core-Suite für PRs (Production Pipeline) -->
    <profile>
      <id>core-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <!-- Überschreibe die Default-Konfiguration komplett -->
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
                <quarkus.profile>test</quarkus.profile>
              </systemPropertyVariables>
              <argLine>${jacocoArgLine} -Duser.language=de -Duser.country=DE</argLine>
              <!-- Nur Core-Tests ausführen -->
              <groups>core</groups>
              <!-- Sicherheitshalber ausschließen -->
              <excludedGroups>migrate,quarantine</excludedGroups>
              <!-- Für saubere Fehlersuche -->
              <trimStackTrace>false</trimStackTrace>
              <!-- JUnit Platform Properties -->
              <properties>
                <configurationParameters>
                  junit.jupiter.testinstance.lifecycle.default=per_method
                </configurationParameters>
              </properties>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Migration-Suite für Nightly (Non-blocking) -->
    <profile>
      <id>migrate-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>3.2.5</version>
            <configuration>
              <!-- Überschreibe die Default-Konfiguration komplett -->
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
                <quarkus.profile>test</quarkus.profile>
              </systemPropertyVariables>
              <argLine>${jacocoArgLine} -Duser.language=de -Duser.country=DE</argLine>
              <!-- Tests in Migration + bekannt problematische -->
              <groups>migrate,quarantine</groups>
              <!-- Core-Tests ausschließen -->
              <excludedGroups>core</excludedGroups>
              <!-- Für saubere Fehlersuche -->
              <trimStackTrace>false</trimStackTrace>
              <!-- JUnit Platform Properties -->
              <properties>
                <configurationParameters>
                  junit.jupiter.testinstance.lifecycle.default=per_method
                </configurationParameters>
              </properties>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- Unit-Suite für schnelle lokale Tests (~5-10s) -->
    <profile>
      <id>unit</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
              </systemPropertyVariables>
              <argLine>${jacocoArgLine} -Duser.language=de -Duser.country=DE</argLine>
              <!-- Nur Unit-Tests ausführen (keine Quarkus-Container) -->
              <groups>unit</groups>
              <trimStackTrace>false</trimStackTrace>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Integration-Suite für Service/Repository Tests (~5-8 min) -->
    <profile>
      <id>integration</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
                <quarkus.profile>test</quarkus.profile>
              </systemPropertyVariables>
              <argLine>${jacocoArgLine} -Duser.language=de -Duser.country=DE</argLine>
              <!-- Nur Integration-Tests ausführen (Service/Repository-Layer) -->
              <groups>integration</groups>
              <trimStackTrace>false</trimStackTrace>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- E2E-Suite für REST-API Tests (~2-3 min) -->
    <profile>
      <id>e2e</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
                <quarkus.profile>test</quarkus.profile>
              </systemPropertyVariables>
              <argLine>${jacocoArgLine} -Duser.language=de -Duser.country=DE</argLine>
              <!-- Nur E2E-Tests ausführen (REST-API) -->
              <groups>e2e</groups>
              <trimStackTrace>false</trimStackTrace>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Performance-Suite für wöchentliche/monatliche Performance-Tests -->
    <profile>
      <id>performance</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <configuration>
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
                <quarkus.profile>test</quarkus.profile>
                <performance.tests.enabled>true</performance.tests.enabled>
              </systemPropertyVariables>
              <argLine>${jacocoArgLine} -Duser.language=de -Duser.country=DE</argLine>
              <!-- Nur Performance-Tests ausführen -->
              <groups>performance</groups>
              <!-- Für saubere Fehlersuche -->
              <trimStackTrace>false</trimStackTrace>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Stable-Suite für Release (alle außer quarantine) -->
    <profile>
      <id>stable-tests</id>
      <properties>
        <junit.jupiter.tags>!quarantine</junit.jupiter.tags>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <properties>
                <configurationParameters>
                  junit.jupiter.testinstance.lifecycle.default=per_method
                  junit.jupiter.tags=${junit.jupiter.tags}
                </configurationParameters>
              </properties>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>