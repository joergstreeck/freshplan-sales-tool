# --- HTTP Server ---
quarkus.http.port=8080

# Dev mode: Fallback user ID for DEV-SEED data (auth disabled)
app.dev.fallback-user-id=admin

# Security: Request Size Limits (Sprint 2.1.6 - Security Hardening Phase 2)
# Prevents large payload attacks and resource exhaustion
quarkus.http.limits.max-body-size=10M
quarkus.http.limits.max-header-size=8K
quarkus.http.limits.max-initial-line-length=4096

# Security: HTTP Security Headers (Sprint 2.1.6 - Security Hardening Phase 2)
# Prevents XSS, Clickjacking, MIME sniffing attacks
quarkus.http.filter.security-headers.matches=/*
quarkus.http.filter.security-headers.header."X-Content-Type-Options"=nosniff
quarkus.http.filter.security-headers.header."X-Frame-Options"=DENY
quarkus.http.filter.security-headers.header."X-XSS-Protection"=1; mode=block
quarkus.http.filter.security-headers.header."Strict-Transport-Security"=max-age=31536000; includeSubDomains
quarkus.http.filter.security-headers.header."Referrer-Policy"=strict-origin-when-cross-origin
quarkus.http.filter.security-headers.header."Permissions-Policy"=geolocation=(), microphone=(), camera=()

# Security: Session Configuration (JWT-based, stateless)
# JWT tokens are stateless, no server-side session storage needed
# Token expiration is handled by Keycloak (default: 5 minutes for access tokens)

# --- Feature Flags ---
# CQRS Pattern for separating commands and queries (PR #5)
features.cqrs.enabled=true

# --- Follow-up Automation (Sprint 2.1 - FP-235) ---
# Enable/disable T+3/T+7 follow-up automation
freshplan.followup.enabled=false
# Cron expression for follow-up scheduler (daily at midnight)
freshplan.followup.cron=0 0 * * * ?
# Maximum number of leads to process per batch
freshplan.followup.batchSize=200
# Unsubscribe token secret (REQUIRED in production - minimum 32 chars)
# %prod.freshplan.unsubscribe.token.secret=${UNSUBSCRIBE_TOKEN_SECRET:MUST_BE_CONFIGURED_IN_PROD}

# Per-Use-Case Feature Flags for granular control
# Customer list endpoint can be kept on legacy while other operations use CQRS
# This is useful when CQRS list performance needs optimization
features.cqrs.customers.list.enabled=false

# --- RLS Security Configuration ---
# Enable RLS Connection Affinity interceptor (critical for security)
security.rls.interceptor.enabled=true
# Fail-closed mode: reject operations if RLS context cannot be set
security.rls.fail-closed=true

# --- CQRS Light Configuration ---
# Event publishing configuration
cqrs.events.enabled=true
cqrs.events.max-payload-size=7900

# Event subscriber configuration
cqrs.subscriber.enabled=true
cqrs.subscriber.poll-interval-ms=100
# Comma-separated list of channels to subscribe
cqrs.subscriber.channels=cqrs_all_events,cqrs_lead,cqrs_customer,cqrs_communication,cqrs_cockpit

# Performance targets
cqrs.performance.target-p95-ms=200
cqrs.performance.max-concurrent-users=50

# --- DB ---
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/freshplan
quarkus.datasource.username=${DB_USERNAME:freshplan}
quarkus.datasource.password=${DB_PASSWORD:freshplan}
quarkus.hibernate-orm.database.generation=validate

# JSONB Support for PostgreSQL
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect

# Schema-Validation wieder aktiviert - Schema ist stabil
%dev.quarkus.hibernate-orm.database.generation=validate
# Test profile: Let Flyway manage schema, Hibernate should not touch it
%test.quarkus.hibernate-orm.database.generation=none
quarkus.flyway.migrate-at-start=true
quarkus.flyway.repair-at-start=true
# Test profile: Disable repair to prevent schema modifications
%test.quarkus.flyway.repair-at-start=false
quarkus.flyway.validate-on-migrate=false
quarkus.flyway.out-of-order=true
# NOTE: No ignore-migration-patterns needed!
# Test migrations (V8001-V8002, V10000-V10001, V10003, V10012) are in db/dev-migration/
# Production only loads db/migration/ → Test migrations invisible → No ignore needed
# Dev/Test profiles load both folders (see %dev/%test.quarkus.flyway.locations below)
# Default to prod environment (migrations will skip test data)
quarkus.flyway.placeholders.env=prod
# Production: Only main migrations
quarkus.flyway.locations=classpath:db/migration
# Dev profile: Include dev-only migrations + DEV-SEED data
%dev.quarkus.flyway.locations=classpath:db/migration,classpath:db/dev-migration,classpath:db/dev-seed
# Test profile: Same as dev (NO dev-seed! Tests create own data)
%test.quarkus.flyway.locations=classpath:db/migration,classpath:db/dev-migration

# --- OIDC Enhanced Configuration ---
# Production: https://auth.z-catering.de/realms/freshplan-realm
# Development: http://localhost:8180/realms/freshplan-realm
quarkus.oidc.auth-server-url=${KEYCLOAK_URL:http://localhost:8180}/realms/${KEYCLOAK_REALM:freshplan-realm}
quarkus.oidc.client-id=${KEYCLOAK_CLIENT_ID:freshplan-backend}
quarkus.oidc.credentials.secret=${KEYCLOAK_CLIENT_SECRET}
quarkus.oidc.application-type=service
quarkus.oidc.tls.verification=certificate-validation

# Enhanced JWT Configuration
quarkus.oidc.token.issuer=${KEYCLOAK_URL:http://localhost:8180}/realms/${KEYCLOAK_REALM:freshplan-realm}
quarkus.oidc.token.audience=${KEYCLOAK_CLIENT_ID:freshplan-backend}
quarkus.oidc.jwks-path=${KEYCLOAK_URL:http://localhost:8180}/realms/${KEYCLOAK_REALM:freshplan-realm}/protocol/openid-connect/certs

# Token validation settings  
# Note: refresh-expired only works for WEB_APP, not SERVICE applications
# quarkus.oidc.token.refresh-expired=true
quarkus.oidc.token.verify-access-token-with-user-info=false
quarkus.oidc.token.allow-jwt-introspection=true
quarkus.oidc.token.allow-opaque-token-introspection=true

# Role mapping configuration
quarkus.oidc.roles.role-claim-path=realm_access/roles
# Note: roles.source=idtoken only works for WEB_APP, not SERVICE applications
# quarkus.oidc.roles.source=idtoken

# Security configuration - require authentication for all endpoints by default
quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated

# Allow health endpoints without authentication
quarkus.http.auth.permission.health.paths=/q/health,/q/health/*
quarkus.http.auth.permission.health.policy=permit
quarkus.http.auth.permission.health.methods=GET

# Dev mode: Disable authentication for development
%dev.quarkus.oidc.enabled=false
%dev.quarkus.security.auth.enabled-in-dev-mode=false

# Test mode: Disable authentication for tests
%test.quarkus.oidc.enabled=false
%test.quarkus.http.auth.basic=false
%test.quarkus.http.auth.form.enabled=false
# Override the default authenticated permission for tests
%test.quarkus.http.auth.permission.authenticated.paths=/non-existent-path
%test.quarkus.http.auth.permission.authenticated.policy=deny
%test.quarkus.http.auth.permission.permit-all.paths=/*
%test.quarkus.http.auth.permission.permit-all.policy=permit

# E2E Test mode: Enable OIDC for integration tests (requires running Keycloak)
%e2e.quarkus.oidc.enabled=true
%e2e.quarkus.http.port=8081
%e2e.quarkus.oidc.auth-server-url=http://localhost:8180/realms/freshplan
%e2e.quarkus.oidc.client-id=freshplan-backend
%e2e.quarkus.oidc.application-type=service

# --- CORS Configuration (separated for dev/prod) ---
# CORS for development environment
%dev.quarkus.http.cors=true
%dev.quarkus.http.cors.origins=http://localhost:5173,http://192.168.1.42:5173,http://127.0.0.1:5173
%dev.quarkus.http.cors.methods=GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD
%dev.quarkus.http.cors.headers=Authorization,Content-Type,If-None-Match,If-Match,accept,x-requested-with,origin
%dev.quarkus.http.cors.exposed-headers=ETag,location,content-disposition
%dev.quarkus.http.cors.access-control-max-age=86400

# CORS for production environment (strict)
%prod.quarkus.http.cors=true
%prod.quarkus.http.cors.origins=https://app.freshfoodz.de
%prod.quarkus.http.cors.methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
%prod.quarkus.http.cors.headers=Authorization,Content-Type,If-None-Match,If-Match
%prod.quarkus.http.cors.exposed-headers=ETag
%prod.quarkus.http.cors.access-control-max-age=3600

# CORS for test environment
%test.quarkus.http.cors=true
%test.quarkus.http.cors.origins=http://localhost:5173
%test.quarkus.http.cors.methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
%test.quarkus.http.cors.headers=Authorization,Content-Type,If-None-Match,If-Match
%test.quarkus.http.cors.exposed-headers=ETag

# --- OpenAPI ---
quarkus.smallrye-openapi.path=/openapi
quarkus.swagger-ui.always-include=true

# --- Flyway Baseline ---
quarkus.flyway.baseline-on-migrate=true
# SECURITY: Validation MUST be enabled in all environments
%dev.quarkus.flyway.validate-on-migrate=true
quarkus.flyway.clean-disabled=true
# Test profile: Allow clean for fresh test runs (managed by GlobalTestResourceManager)
%test.quarkus.flyway.clean-disabled=false

# --- Logging Configuration ---
# Console logging
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO

# File logging with rotation
quarkus.log.file.enable=true
quarkus.log.file.path=logs/backend.log
quarkus.log.file.level=INFO
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# Log rotation settings
quarkus.log.file.rotation.max-file-size=10M
quarkus.log.file.rotation.max-backup-index=5
quarkus.log.file.rotation.file-suffix=.yyyy-MM-dd
quarkus.log.file.rotation.rotate-on-boot=true

# Category specific logging
quarkus.log.category."de.freshplan".level=DEBUG
quarkus.log.category."org.hibernate.SQL".level=DEBUG
%prod.quarkus.log.category."org.hibernate.SQL".level=INFO
quarkus.log.category."io.quarkus".level=INFO

# Cache Configuration (Sprint 1.4 Quick Win)
quarkus.cache.caffeine."settings-cache".maximum-size=5000
quarkus.cache.caffeine."settings-cache".expire-after-write=5M

# --- Xentral API Integration (Sprint 2.1.7.2) ---
# Feature-Flag: Mock-Mode vs Real API
# Development/Testing: Use mock data (no Xentral API calls)
# Production: Connect to real Xentral ERP system
xentral.api.mock-mode=true

# Real Xentral API Configuration (Xentral v25.40.2 PRO - v1/v2 Hybrid API)
# IMPORTANT: Only used when xentral.api.mock-mode=false

# Dev/Test: Dummy token (not used in mock mode, but required by config injection)
xentral.api.base-url=https://644b6ff97320d.xentral.biz
xentral.api.token=dev-dummy-token-not-used-in-mock-mode

# Production: Real credentials from environment variables
%prod.xentral.api.base-url=${XENTRAL_API_URL:https://644b6ff97320d.xentral.biz}
%prod.xentral.api.token=${XENTRAL_API_TOKEN:MUST_BE_CONFIGURED_IN_PROD}

# Xentral API Timeouts
xentral.api.connect-timeout=5000
xentral.api.read-timeout=10000

# --- Quarkus REST Clients for Xentral API (D2b) ---
# v2 Customers API
quarkus.rest-client.xentral-customers-v2.url=${xentral.api.base-url:https://644b6ff97320d.xentral.biz}
quarkus.rest-client.xentral-customers-v2.scope=jakarta.enterprise.context.ApplicationScoped
quarkus.rest-client.xentral-customers-v2.connect-timeout=${xentral.api.connect-timeout:5000}
quarkus.rest-client.xentral-customers-v2.read-timeout=${xentral.api.read-timeout:10000}

# v1 Invoices API
quarkus.rest-client.xentral-invoices-v1.url=${xentral.api.base-url:https://644b6ff97320d.xentral.biz}
quarkus.rest-client.xentral-invoices-v1.scope=jakarta.enterprise.context.ApplicationScoped
quarkus.rest-client.xentral-invoices-v1.connect-timeout=${xentral.api.connect-timeout:5000}
quarkus.rest-client.xentral-invoices-v1.read-timeout=${xentral.api.read-timeout:10000}

# v1 Employees API
quarkus.rest-client.xentral-employees-v1.url=${xentral.api.base-url:https://644b6ff97320d.xentral.biz}
quarkus.rest-client.xentral-employees-v1.scope=jakarta.enterprise.context.ApplicationScoped
quarkus.rest-client.xentral-employees-v1.connect-timeout=${xentral.api.connect-timeout:5000}
quarkus.rest-client.xentral-employees-v1.read-timeout=${xentral.api.read-timeout:10000}
