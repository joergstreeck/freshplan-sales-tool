openapi: 3.1.0
info: { title: Samples API (Module 03), version: 1.0.0 }
servers: [ { url: https://api.example.com } ]
security: [ { bearerAuth: [] } ]
components:
  securitySchemes: { bearerAuth: { type: http, scheme: bearer, bearerFormat: JWT } }
  schemas:
    SampleStatus: { type: string, enum: [REQUESTED, PACKED, IN_TRANSIT, DELIVERED, FEEDBACK_SUCCESS, FEEDBACK_NEUTRAL, FEEDBACK_FAIL, CANCELED] }
  responses:
    BadRequest: { $ref: './common-errors.yaml#/components/responses/BadRequest' }
    Forbidden:  { $ref: './common-errors.yaml#/components/responses/Forbidden' }
    Conflict:   { $ref: './common-errors.yaml#/components/responses/Conflict' }
    TooMany:    { $ref: './common-errors.yaml#/components/responses/TooMany' }
paths:
  /api/samples:
    get:
      summary: Samples filtern
      parameters:
        - { name: customerId, in: query, schema: { type: string, format: uuid } }
        - { name: status, in: query, schema: { $ref: '#/components/schemas/SampleStatus' } }
        - { name: limit, in: query, schema: { type: integer, default: 50 } }
        - { name: cursor, in: query, schema: { type: string } }
      responses: { '200': { description: OK }, '403': { $ref: '#/components/responses/Forbidden' } }
    post:
      summary: Sample anlegen
      responses: { '201': { description: Created }, '400': { $ref: '#/components/responses/BadRequest' } }
  /api/samples/{id}/status:
    patch:
      summary: Status aktualisieren
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [newStatus]
              properties: { newStatus: { $ref: '#/components/schemas/SampleStatus' }, eventAt: { type: string, format: date-time } }
      responses: { '200': { description: OK }, '409': { $ref: '#/components/responses/Conflict' }, '403': { $ref: '#/components/responses/Forbidden' } }
