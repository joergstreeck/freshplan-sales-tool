openapi: 3.1.0
info: { title: Samples API, version: 1.0.0, description: "CRM-integriertes Sample-Management für Cook&Fresh®" }
servers: [ { url: "https://api.example.com" } ]
security: [ { bearerAuth: [] } ]
components:
  securitySchemes:
    bearerAuth: { type: http, scheme: bearer, bearerFormat: JWT }
  parameters:
    CorrelationId:
      name: X-Correlation-Id
      in: header
      required: false
      schema: { type: string, format: uuid }
  schemas:
    SampleStatus:
      type: string
      enum: [REQUESTED, PACKED, IN_TRANSIT, DELIVERED, FEEDBACK_SUCCESS, FEEDBACK_NEUTRAL, FEEDBACK_FAIL, CANCELED]
paths:
  /samples:
    post:
      summary: Sample anfordern (Cook&Fresh®)
      tags: [Samples]
      parameters:
        - $ref: "#/components/parameters/CorrelationId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [customerId, items, deliveryDate]
              properties:
                customerId: { type: string, format: uuid }
                kitId: { type: string, nullable: true, description: "Optionales Default-Kit" }
                items:
                  type: array
                  minItems: 1
                  items:
                    type: object
                    required: [sku, quantity]
                    properties:
                      sku: { type: string, description: "SKU aus Produktkatalog (read-only Lookup)" }
                      quantity: { type: integer, minimum: 1 }
                deliveryDate: { type: string, format: date }
                deliveryAddress: { type: string }
                contactEmail: { type: string, format: email }
                notes: { type: string }
      responses:
        "201":
          description: Erstellt
        "400": { $ref: "common-errors.yaml#/components/responses/BadRequest" }
        "403": { $ref: "common-errors.yaml#/components/responses/Forbidden" }
        "409": { $ref: "common-errors.yaml#/components/responses/Conflict" }
        "429": { $ref: "common-errors.yaml#/components/responses/TooManyRequests" }
    get:
      summary: Samples listen
      tags: [Samples]
      parameters:
        - $ref: "#/components/parameters/CorrelationId"
        - { name: customerId, in: query, schema: { type: string, format: uuid } }
        - { name: status, in: query, schema: { $ref: "#/components/schemas/SampleStatus" } }
        - { name: limit, in: query, schema: { type: integer, default: 50, minimum: 1, maximum: 200 } }
        - { name: cursor, in: query, schema: { type: string } }
      responses:
        "200": { description: OK }
        "403": { $ref: "common-errors.yaml#/components/responses/Forbidden" }
  /samples/{id}:
    get:
      summary: Sample Detail
      tags: [Samples]
      parameters:
        - $ref: "#/components/parameters/CorrelationId"
        - { name: id, in: path, required: true, schema: { type: string, format: uuid } }
      responses:
        "200": { description: OK }
        "403": { $ref: "common-errors.yaml#/components/responses/Forbidden" }
        "404": { description: Not Found }
  /samples/{id}/status:
    patch:
      summary: Sample-Status aktualisieren
      tags: [Samples]
      parameters:
        - $ref: "#/components/parameters/CorrelationId"
        - { name: id, in: path, required: true, schema: { type: string, format: uuid } }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [newStatus]
              properties:
                newStatus: { $ref: "#/components/schemas/SampleStatus" }
                eventAt: { type: string, format: date-time }
      responses:
        "200": { description: Aktualisiert }
        "400": { $ref: "common-errors.yaml#/components/responses/BadRequest" }
        "403": { $ref: "common-errors.yaml#/components/responses/Forbidden" }
        "409": { $ref: "common-errors.yaml#/components/responses/Conflict" }
        "429": { $ref: "common-errors.yaml#/components/responses/TooManyRequests" }
