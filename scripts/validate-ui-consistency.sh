#!/bin/bash

# UI Consistency Validation Script
# Zweck: UI-Konsistenz nach Frontend-Entwicklung pr√ºfen
# Autor: Claude
# Datum: 17.07.2025

set -e

# Farben f√ºr Output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Parameter
FILE_PATH=${1:-""}

if [ -z "$FILE_PATH" ]; then
    echo -e "${RED}‚ùå Fehler: Kein Dateipfad angegeben!${NC}"
    echo "Usage: $0 <file-path>"
    exit 1
fi

if [ ! -f "$FILE_PATH" ]; then
    echo -e "${RED}‚ùå Fehler: Datei nicht gefunden: $FILE_PATH${NC}"
    exit 1
fi

echo -e "${YELLOW}üîç Validiere UI-Konsistenz...${NC}"
echo "Datei: $FILE_PATH"
echo ""

# Variablen f√ºr Probleme
ISSUES=()

# Check 1: Base Components verwendet?
echo "Pr√ºfe Base Components..."
if [[ "$FILE_PATH" == *".tsx" ]]; then
    # F√ºr Pages: PageWrapper pr√ºfen
    if [[ "$FILE_PATH" == *"Page.tsx" ]] || [[ "$FILE_PATH" == *"page.tsx" ]]; then
        if ! grep -q "PageWrapper" "$FILE_PATH"; then
            ISSUES+=("‚ùå PageWrapper nicht verwendet (f√ºr Pages erforderlich)")
        else
            echo -e "${GREEN}‚úÖ PageWrapper verwendet${NC}"
        fi
    fi
    
    # F√ºr Components: SectionCard pr√ºfen
    if ! grep -q -E "(PageWrapper|SectionCard|StandardTable|FormDialog)" "$FILE_PATH"; then
        echo -e "${YELLOW}‚ö†Ô∏è  Keine Base Components gefunden (k√∂nnte OK sein f√ºr kleine Components)${NC}"
    else
        echo -e "${GREEN}‚úÖ Base Component(s) verwendet${NC}"
    fi
fi

# Check 2: Hardcoded Text?
echo ""
echo "Pr√ºfe auf hardcoded Texte..."
# Suche nach Strings in JSX
HARDCODED=$(grep -E '>[^<]*[A-Za-z]{3,}[^<]*<' "$FILE_PATH" | grep -v -E '(t\(|{/\*|//|className=|style=|data-|aria-)' || true)
if [ ! -z "$HARDCODED" ]; then
    ISSUES+=("‚ùå M√∂gliche hardcoded Texte gefunden:")
    while IFS= read -r line; do
        ISSUES+=("   $line")
    done <<< "$HARDCODED"
else
    echo -e "${GREEN}‚úÖ Keine hardcoded Texte gefunden${NC}"
fi

# Check 3: useTranslation Hook?
echo ""
echo "Pr√ºfe Translation Hook..."
if [[ "$FILE_PATH" == *".tsx" ]]; then
    if ! grep -q "useTranslation" "$FILE_PATH"; then
        # Pr√ºfe ob √ºberhaupt Text-Content vorhanden
        if grep -q -E '>[^<]+<' "$FILE_PATH"; then
            ISSUES+=("‚ö†Ô∏è  useTranslation Hook nicht verwendet (aber Text-Content gefunden)")
        fi
    else
        echo -e "${GREEN}‚úÖ useTranslation Hook verwendet${NC}"
        
        # Pr√ºfe ob t() auch verwendet wird
        if ! grep -q "t(" "$FILE_PATH"; then
            ISSUES+=("‚ö†Ô∏è  useTranslation importiert aber t() nicht verwendet")
        fi
    fi
fi

# Check 4: Theme verwendet?
echo ""
echo "Pr√ºfe Theme-Nutzung..."
if grep -q -E "(sx=|theme\.)" "$FILE_PATH"; then
    echo -e "${GREEN}‚úÖ Theme-konform (sx oder theme verwendet)${NC}"
else
    if grep -q "style=" "$FILE_PATH"; then
        ISSUES+=("‚ö†Ô∏è  Inline-Styles gefunden - besser Theme/sx verwenden")
    fi
fi

# Check 5: Deutsche Begriffe
echo ""
echo "Pr√ºfe auf englische UI-Begriffe..."
ENGLISH_TERMS=("Dashboard" "Settings" "Save" "Cancel" "Delete" "Edit" "Create" "Update" "Search" "Filter" "Sort" "Export" "Import" "Upload" "Download" "Submit" "Reset" "Back" "Next" "Previous" "Close")
for term in "${ENGLISH_TERMS[@]}"; do
    if grep -q "$term" "$FILE_PATH" | grep -v -E "(//|/\*|import|from|interface|type|const|let|var|function|class)" || false; then
        ISSUES+=("‚ö†Ô∏è  Englischer Begriff gefunden: '$term' (nutze deutsche √úbersetzung)")
    fi
done

# Ergebnis
echo ""
echo "================================"
if [ ${#ISSUES[@]} -eq 0 ]; then
    echo -e "${GREEN}‚ú® Komponente ist UI-konform!${NC}"
    
    # Hilfreiche Erinnerungen
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  Vergiss nicht die √úbersetzungen:${NC}"
    # Extrahiere m√∂gliche Translation Keys
    TRANSLATION_KEYS=$(grep -o "t('[^']*')" "$FILE_PATH" | sed "s/t('//g" | sed "s/')//g" | sort | uniq || true)
    if [ ! -z "$TRANSLATION_KEYS" ]; then
        while IFS= read -r key; do
            echo "   - $key"
        done <<< "$TRANSLATION_KEYS"
    fi
else
    echo -e "${RED}‚ùå UI-Konsistenz-Probleme gefunden:${NC}"
    echo ""
    for issue in "${ISSUES[@]}"; do
        echo "$issue"
    done
    echo ""
    echo -e "${YELLOW}üí° Tipps:${NC}"
    echo "- Nutze Base Components aus frontend/src/components/base/"
    echo "- Verwende immer useTranslation Hook f√ºr Texte"
    echo "- Schaue in UI_SPRACHREGELN.md f√ºr deutsche Begriffe"
    echo "- Referenz: SettingsPage.tsx oder SalesCockpitV2.tsx"
    exit 1
fi

echo ""
echo "Happy Coding! üöÄ"