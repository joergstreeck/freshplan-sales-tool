#!/bin/bash
# Emergency Recovery Script f√ºr Git-Katastrophen

echo "üö® Git Emergency Recovery Tool"
echo "=============================="

# Aktuellen Status anzeigen
echo -e "\nüìä Aktueller Status:"
echo "Branch: $(git branch --show-current)"
echo "√Ñnderungen:"
git status --short

# Recovery-Optionen
echo -e "\nüîß Recovery-Optionen:"
echo "1) Alle √Ñnderungen verwerfen (reset --hard)"
echo "2) √Ñnderungen stashen und Branch wechseln"
echo "3) Einzelne Datei aus main wiederherstellen"
echo "4) Letzten Commit r√ºckg√§ngig machen"
echo "5) Reflog anzeigen (alle Aktionen)"
echo "6) Diagnose-Script ausf√ºhren"
echo "0) Abbrechen"

read -p "W√§hle Option (0-6): " choice

case $choice in
    1)
        echo "‚ö†Ô∏è  WARNUNG: Alle lokalen √Ñnderungen werden verworfen!"
        read -p "Sicher? (y/n): " confirm
        if [ "$confirm" = "y" ]; then
            git reset --hard HEAD
            echo "‚úÖ √Ñnderungen verworfen"
        fi
        ;;
    2)
        backup_name="emergency-backup-$(date +%Y%m%d_%H%M%S)"
        git stash push -m "$backup_name"
        echo "‚úÖ √Ñnderungen gesichert als: $backup_name"
        git checkout main
        git pull origin main
        echo "‚úÖ Auf main gewechselt und aktualisiert"
        ;;
    3)
        read -p "Dateipfad eingeben: " filepath
        if [ -n "$filepath" ]; then
            git checkout main -- "$filepath"
            echo "‚úÖ $filepath aus main wiederhergestellt"
        fi
        ;;
    4)
        echo "Letzter Commit:"
        git log -1 --oneline
        read -p "R√ºckg√§ngig machen? (y/n): " confirm
        if [ "$confirm" = "y" ]; then
            git reset --soft HEAD~1
            echo "‚úÖ Commit r√ºckg√§ngig gemacht (√Ñnderungen behalten)"
        fi
        ;;
    5)
        echo -e "\nüìú Git Reflog (letzte 20 Aktionen):"
        git reflog -20
        ;;
    6)
        if [ -f "./scripts/diagnose-problems.sh" ]; then
            ./scripts/diagnose-problems.sh
        else
            echo "‚ùå Diagnose-Script nicht gefunden"
        fi
        ;;
    0)
        echo "‚ùå Abgebrochen"
        exit 0
        ;;
    *)
        echo "‚ùå Ung√ºltige Option"
        ;;
esac

echo -e "\nüìä Neuer Status:"
git status --short